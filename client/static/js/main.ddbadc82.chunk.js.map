{"version":3,"sources":["serviceWorker.js","AppContext.js","services/useReq.js","components/LoginForm.js","components/Login.js","middlewares/Auth.js","components/MainContext.js","tools/convert-one.js","components/Music/MusicTable.js","components/Music/index.js","components/Radio/RadioMusic.js","components/Radio/index.js","components/Admin/LibraryForm.js","components/Admin/LibraryTable.js","components/Admin/Library.js","components/Admin/index.js","components/Player/index.js","components/Welcome.js","components/Mine/index.js","tools/convert.js","components/Main.js","App.js","404.js","AppRouter.js","index.js","assets/note1024.png"],"names":["Boolean","window","location","hostname","match","AppContext","React","createContext","withParams","uri","params","tail","join","useReq","type","useState","loading","res","setRes","err","setErr","body","query","token","toLowerCase","request","get","set","then","catch","send","layout","labelCol","span","wrapperCol","tailLayout","offset","LoginForm","register","run","setUser","useContext","useEffect","localStorage","setItem","spinning","name","initialValues","remember","onFinish","email","password","username","Item","label","rules","required","message","Password","valuePropName","htmlType","description","JSON","stringify","response","text","TabPane","Tabs","Login","defaultActiveKey","tab","key","ranks","Auth","children","rank","exceptions","user","useLocation","indexOf","outrank","list","e","isExcepted","pathname","split","MainContext","convertOne","music","getItem","title","singer","artist","duration","picture","_id","album","musicSrc","cover","format","data","note1024","momentDurationFormatSetup","moment","MusicTable","playlist","setPlaylist","player","setPlaylistRaw","selectedRowKeys","setSelectedRowKeys","searchText","setSearchText","searchedColumn","setSearchedColumn","getAllMusic","allMusic","setData","console","log","error","rowSelection","onChange","searchInput","length","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","placeholder","value","target","onPressEnter","handleSearch","width","marginBottom","display","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","highlightStyle","backgroundColor","searchWords","autoEscapemode","textToHighlight","columns","src","sorter","responsive","PlusOutlined","onCell","appendAudio","HeartOutlined","DownloadOutlined","dataSource","map","onRow","rowIndex","pagination","filters","field","order","tmp","sort","a","b","String","localeCompare","Content","Layout","Music","margin","className","minHeight","Title","Typography","RadioMusic","audioInfo","share","copy","origin","shareId","success","alt","DeleteOutlined","StepForwardOutlined","musicId","ShareAltOutlined","Header","Radio","Footer","radio","sample","setAudioInfo","clear","updatePlayIndex","load","l","note2014","Math","random","LibraryForm","add","path","rec","help","TextArea","rows","update","setModal","checked","disabled","index","danger","LibraryTable","getlibs","updateReq","remove","removeReq","modal","onCancel","confirmLoading","onOk","libraryId","okButtonProps","Library","Admin","exact","Player","onTrackChange","getPlayer","onAudioPlay","history","useHistory","glassBg","showMediaSession","audioLists","autoPlay","mode","innerWidth","bottom","right","errMsg","push","currentPlayId","Welcome","Mine","PlayCircleOutlined","convert","Main","setPlayer","drawer","setDrawer","document","Provider","theme","defaultSelectedKeys","onSelect","item","placement","onClose","find","id","App","FOF","status","subTitle","extra","AppRouter","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ddbadc82.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nconst AppContext = React.createContext()\n\nexport default AppContext\n","import { useState } from 'react'\nimport request from \"superagent\"\n\nconst withParams = (uri, params) => {\n    const tail = params.join('/')\n    return `${uri}/${tail}`\n}\n\nconst useReq = (type, uri) => {\n    const [loading, setLoading] = useState(false)\n    const [res, setRes] = useState(null)\n    const [err, setErr] = useState(null)\n\n    const run = ({body, query, params, token} = {}) => {\n        if(type.toLowerCase() === \"get\"){\n            return (\n                request.get(params ? withParams(uri, params) : uri)\n                    .set(\"x-auth\", token ? token : \"\")\n                    .query(query ? query : {})\n                    .then(res => {\n                        setRes(res)\n                        return res\n                    })\n                    .catch(setErr)\n            )\n        }\n        else {\n            return (\n                request[type.toLowerCase()](uri)\n                    .set(\"x-auth\", token ? token : \"\")\n                    .send(body ? body : {})\n                    .then(setRes)\n                    .catch(setErr)\n            )\n        }\n    }\n\n    return [run, {loading, res, err}]\n}\n\nexport default useReq\n","import React, { useState, useEffect, useContext } from 'react'\nimport { Form, Input, Button, Checkbox, Spin, Alert } from 'antd'\nimport useReq from '../services/useReq'\nimport AppContext from '../AppContext'\n\nconst layout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 16 },\n}\nconst tailLayout = {\n    wrapperCol: { offset: 2, span: 16 },\n}\n\nconst LoginForm = ({ register }) => {\n\n    const [run, { loading, res, err }] = useReq(\"POST\", (register ? \"/register\" : \"/login\"))\n    const { setUser } = useContext(AppContext)\n\n    const submit = ({ email, password, username }) => {\n        if (!loading) {\n            run({\n                body: { email, password, username }\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (res?.body?.token) {\n            localStorage.setItem(\"token\", res.body.token)\n            setUser(res.body)\n        }\n    }, [res])\n\n    return (\n        <Spin spinning={loading}>\n            <Form\n                {...layout}\n                name=\"login\"\n                initialValues={{ remember: true }}\n                onFinish={submit}\n            >\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[{ required: true, message: 'Please input your email!' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                {\n                    register\n                        ? (\n                            <Form.Item\n                                label=\"Username\"\n                                name=\"username\"\n                            >\n                                <Input />\n                            </Form.Item>\n\n                        )\n                        : (\n                            <Form.Item name=\"remember\" valuePropName=\"checked\" {...tailLayout}>\n                                <Checkbox>Remember me</Checkbox>\n                            </Form.Item>\n                        )\n                }\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n            {\n                err\n                    ? (\n                        <Alert\n                            message=\"Failed\"\n                            description={JSON.stringify(err.response?.text)}\n                            type=\"error\"\n                        />\n                    )\n                    : \"\"\n            }\n        </Spin>\n    )\n}\n\nexport default LoginForm\n","import React, { useState } from 'react'\nimport { Tabs } from 'antd'\nimport LoginForm from './LoginForm'\n\nconst { TabPane } = Tabs\n\nconst Login = () => {\n\n    return (\n        <Tabs defaultActiveKey=\"1\">\n            <TabPane tab=\"Login\" key=\"1\">\n                <LoginForm />\n            </TabPane>\n            <TabPane tab=\"Register\" key=\"2\">\n                <LoginForm register />\n            </TabPane>\n        </Tabs>\n    )\n}\n\nexport default Login\n","import React, { useContext } from 'react'\nimport AppContext from '../AppContext'\nimport Login from '../components/Login'\nimport {Alert} from \"antd\"\nimport {useLocation} from \"react-router-dom\"\n\nconst ranks = [\n    \"Guest\",\n    \"User\",\n    \"Uploader\",\n    \"Moderator\",\n    \"Admin\"\n]\n\nconst outrank = (user, rank) => ranks.indexOf(user.rank) >= ranks.indexOf(rank)\n\nconst isExcepted = (list, exceptions) => {\n    for(let e of list){\n        if(exceptions.indexOf(e) > -1){\n            return true\n        }\n    }\n    return false\n}\n\nconst Auth = ({children, rank=\"User\", exceptions=[]}) => {\n    const {user} = useContext(AppContext)\n\n    const location = useLocation()\n    \n    return (\n        user\n        ? (\n            outrank(user, rank)\n            ? children\n            : <Alert \n                message=\"Unauthorized\"\n                description={`Viewing this page requires a ${rank} or higher rank.`}\n                type=\"error\"\n            />\n        )\n        : (\n            isExcepted(location.pathname.split(\"/\"), exceptions)\n            ? children\n            : <Login />\n        )\n    )\n}\n\nexport default Auth\n","import React from 'react'\n\nconst MainContext = React.createContext()\n\nexport default MainContext\n","import note1024 from \"../assets/note1024.png\"\n\nconst convertOne = (music) => {\n    const token = localStorage.getItem(\"token\")\n    const {\n        title: name,\n        artist: singer,\n        duration, picture,\n        _id,\n        album,\n        musicSrc\n    } = music\n    return {\n        name, singer, duration,\n        cover: picture[0] ? `data:${picture[0].format};base64,${picture[0].data}` : note1024,\n        musicSrc: `/music/download/${token}/${_id}`,\n        album,\n        _id,\n    }\n}\n\nexport default convertOne\n","import React, { useState, useEffect, useContext } from 'react'\nimport { Table, Input, Button, Space, message, Avatar } from 'antd'\nimport Highlighter from 'react-highlight-words'\nimport { SearchOutlined, CaretRightOutlined, PlusOutlined, HeartOutlined, HeartFilled, DownloadOutlined, ProfileOutlined } from '@ant-design/icons'\nimport useReq from '../../services/useReq'\nimport moment from \"moment\"\nimport momentDurationFormatSetup from \"moment-duration-format\"\nimport note1024 from \"../../assets/note1024.png\"\nimport MainContext from '../MainContext'\nimport convertOne from '../../tools/convert-one'\n\nmomentDurationFormatSetup(moment)\n\nconst MusicTable = () => {\n    const {\n        playlist, setPlaylist, setPlaylistRaw,\n        player,\n    } = useContext(MainContext)\n\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\n    const [searchText, setSearchText] = useState(\"\")\n    const [searchedColumn, setSearchedColumn] = useState(\"\")\n\n    const [getAllMusic, { loading, res: allMusic, err }] = useReq(\"GET\", \"/music/all\")\n    const [data, setData] = useState(allMusic?.body)\n\n    let playNow = false\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\")\n        getAllMusic({ token })\n    }, [])\n\n    useEffect(() => {\n        if (allMusic) setData(allMusic.body)\n        if (err) {\n            console.log(err)\n            message.error(\"Failed to load music.\")\n        }\n    }, [allMusic, err])\n\n    // useEffect(() => {\n    //     if(player && playNow){\n    //         if(playlist.length > 1){\n    //             player.playNext()\n    //         }\n    //         else {\n    //             player.play()\n    //         }\n    //     }\n    // }, [playlist])\n\n    const start = () => {\n        setTimeout(() => {\n            setSelectedRowKeys([])\n        }, 1000);\n    }\n\n    const onSelectChange = selectedRowKeys => {\n        setSelectedRowKeys(selectedRowKeys)\n    }\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    }\n\n    const hasSelected = selectedRowKeys.length > 0\n\n    const handleChange = (pagination, filters, sorter) => {\n        const { field, order } = sorter\n        setData(data => {\n            if (!order) {\n                return allMusic?.body\n            }\n\n            let tmp = [...data]\n            tmp.sort((a, b) => {\n                if (order === \"ascend\") {\n                    return String(a[field]).localeCompare(String(b[field]))\n                }\n                else {\n                    return String(b[field]).localeCompare(String(a[field]))\n                }\n            })\n            return tmp\n        })\n    }\n\n    let searchInput = \"\"\n\n    const getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n                    </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n                    </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) =>\n            record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => searchInput.select());\n            }\n        },\n        render: text =>\n            searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchText]}\n                    autoEscapemode\n                    textToHighlight={text.toString()}\n                />\n            ) : (\n                    text\n                ),\n    })\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchText(selectedKeys[0])\n        setSearchedColumn(dataIndex)\n    }\n\n    const handleReset = clearFilters => {\n        clearFilters();\n        setSearchText(\"\")\n    }\n\n    const columns = [\n        {\n            dataIndex: \"picture\", key: \"picture\",\n            render: (picture) => (\n                <Avatar src={\n                    picture.length\n                        ? `data:${picture[0].format};base64,${picture[0].data}`\n                        : note1024\n                } />\n            )\n        },\n        {\n            title: \"Title\", dataIndex: \"title\", key: \"title\",\n            sorter: true,\n            ...getColumnSearchProps(\"title\")\n        },\n        {\n            title: \"Artist\", dataIndex: \"artist\", key: \"artist\",\n            sorter: true,\n            ...getColumnSearchProps(\"artist\"),\n            responsive: [\"md\", \"lg\"]\n        },\n        {\n            title: \"Album\", dataIndex: \"album\", key: \"album\",\n            sorter: true,\n            ...getColumnSearchProps(\"album\"),\n            responsive: [\"lg\"]\n        },\n        {\n            title: \"Duration\", dataIndex: \"duration\", key: \"duration\",\n            render: duration => moment.duration(duration, \"seconds\").format(\"mm:ss\"),\n            responsive: [\"md\", \"lg\"]\n        },\n        // {\n        //     key: \"play\",\n        //     render: () => (\n        //         <CaretRightOutlined />\n        //     ),\n        //     onCell: record => ({\n        //         onClick: () => {\n        //             playNow = true\n        //             player.clear()\n        //             setPlaylist(playlist => ([\n        //                 record,\n        //                 ...playlist,\n        //             ]))\n        //         }\n        //     })\n        // },\n        {\n            key: \"add_to_playlist\",\n            render: () => (\n                <PlusOutlined />\n            ),\n            onCell: (record) => ({\n                onClick: () => {\n                    if(playlist.length){\n                        player.appendAudio(playlist.length, [convertOne(record)])\n                    }\n                    else {\n                        setPlaylist([record])\n                    }\n                }\n            })\n        },\n        {\n            key: \"favor\",\n            render: () => (\n                <HeartOutlined />\n            )\n        },\n        {\n            key: \"download\",\n            render: () => (\n                <DownloadOutlined />\n            ),\n            responsive: [\"md\", \"lg\"]\n        },\n    ]\n\n    return (\n        data\n            ? (\n                <>\n                    <Table\n                        rowSelection={rowSelection}\n                        columns={columns}\n                        dataSource={data.map(e => ({ ...e, key: e._id }))}\n                        onRow={(record, rowIndex) => {\n                            // console.log({ record, rowIndex })\n                        }}\n                        onChange={handleChange}\n                        loading={loading}\n                        size=\"small\"\n                    />\n                </>\n            )\n            : \"\"\n    )\n}\n\n\n\nexport default MusicTable","import React from 'react'\nimport MusicTable from './MusicTable'\nimport { Layout, Breadcrumb } from 'antd'\n\nconst { Content } = Layout\n\nconst Music = () => {\n\n    return (\n        <section>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>Library</Breadcrumb.Item>\n            </Breadcrumb>\n            <Layout className=\"site-layout-background\">\n                <Content style={{ minHeight: 280 }}>\n                    <MusicTable />\n                </Content>\n            </Layout>\n        </section>\n    )\n}\n\nexport default Music\n","import React, { useState, useEffect } from 'react'\nimport { Typography, Alert, message } from \"antd\"\nimport {\n    HeartFilled, HeartOutlined,\n    DeleteOutlined,\n    StepForwardOutlined,\n    ShareAltOutlined\n} from \"@ant-design/icons\"\nimport useReq from '../../services/useReq'\nimport copy from 'copy-to-clipboard'\n\nconst { Title } = Typography\n\nconst RadioMusic = ({ audioInfo }) => {\n    const {\n        title, artist, album, picture, _id\n    } = audioInfo\n\n    const [share, { loading, res, err }] = useReq(\"POST\", \"/music/share\")\n\n    useEffect(() => {\n        if (res) {\n            copy(`${window.location.origin}/share/${res.body?.shareId}`)\n            message.success(\"Link copied to copyboard\")\n        }\n        if(err){\n            message.error(\"Failed to generate share link.\")\n        }\n    }, [res, err])\n\n    return (\n        <article className=\"single-music\">\n            <div className=\"music-icon\">\n                <img\n                    className=\"music-icon-image\"\n                    alt=\"cover\"\n                    src={picture}\n                />\n            </div>\n            <div className=\"music-info\">\n                <div className=\"music-info-group\">\n                    <Title>{title}</Title>\n                    <p className=\"font-150\">{artist}</p>\n                    <p>{album}</p>\n                </div>\n                <div className=\"music-favor\">\n                    <div>\n                        <HeartOutlined />\n                    </div>\n                    <div>\n                        <DeleteOutlined />\n                    </div>\n                    <div>\n                        <StepForwardOutlined />\n                    </div>\n                    <div\n                        onClick={() => {\n                            const token = localStorage.getItem(\"token\")\n                            share({\n                                body: {\n                                    musicId: _id\n                                },\n                                token\n                            })\n                        }}\n                    >\n                        <ShareAltOutlined />\n                    </div>\n                </div>\n            </div>\n        </article>\n    )\n}\n\nexport default RadioMusic\n","import React, { useState, useEffect, useContext } from 'react'\nimport \"./radio.scss\"\nimport { Layout, Breadcrumb, Spin, message, Empty, Button } from 'antd'\nimport RadioMusic from './RadioMusic'\nimport useReq from '../../services/useReq'\nimport MainContext from '../MainContext'\nimport note2014 from \"../../assets/note1024.png\"\nimport { useLocation } from \"react-router-dom\"\nimport request from \"superagent\"\n\nconst { Header, Content, Footer } = Layout\n\nconst Radio = ({ radio, share }) => {\n    const [sample, { loading, res, err }] = useReq(\"GET\", \"/music/sample\")\n\n    const {\n        playlist, setPlaylist, setPlaylistRaw,\n        audioInfo, setAudioInfo,\n        player,\n    } = useContext(MainContext)\n\n    const location = useLocation()\n\n\n    useEffect(() => {\n        if (radio) {\n            const token = localStorage.getItem(\"token\")\n            player.clear()\n            sample({ params: [20], token })\n                .then(() => {\n                    player.updatePlayIndex(0)\n                    player.load()\n                })\n        }\n    }, [radio])\n\n    useEffect(() => {\n        if (share && player) {\n            const l = location.pathname.split(\"/\")\n            const shareId = l[l.length - 1]\n            request.get(`/music/share/${shareId}`)\n                .then(res => {\n                    const {\n                        title: name,\n                        artist: singer,\n                        duration, picture,\n                        _id,\n                        album\n                    } = res.body\n                    setPlaylistRaw([{\n                        name, singer, duration,\n                        cover: picture[0] ? `data:${picture[0].format};base64,${picture[0].data}` : note2014,\n                        musicSrc: `/music/shared_file/${shareId}`,\n                        album,\n                        _id,\n                    }])\n                })\n                .catch(err => {\n                    console.log(err)\n                    message.error(\"Failed to load music.\")\n                })\n        }\n\n    }, [share, player])\n\n    useEffect(() => {\n        if (res) {\n            let tmp = [...res.body]\n            tmp.sort(() => Math.random() - 0.5)\n            setPlaylist(tmp)\n            setAudioInfo({\n                ...tmp[0],\n                picture: tmp[0].picture[0] ? `data:${tmp[0].picture[0].format};base64,${tmp[0].picture[0].data}` : note2014\n            })\n        }\n        if (err) {\n            message.error(\"Failed to get playlist\")\n        }\n    }, [res, err])\n\n\n    return (\n        <section>\n            {\n                <div className=\"desktop-only\">\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>Radio</Breadcrumb.Item>\n                    </Breadcrumb>\n                </div>\n            }\n            <Spin spinning={loading}>\n                <Layout className=\"site-layout-background\">\n                    <Content style={{ minHeight: 280 }}>\n                        {\n                            audioInfo\n                                ? <RadioMusic audioInfo={audioInfo} />\n                                : (\n                                    <Empty\n                                        description={\n                                            <span>Nothing is playing</span>\n                                        }\n                                    >\n                                        <Button\n                                            type=\"primary\"\n                                            onClick={() => {\n                                                const token = localStorage.getItem(\"token\")\n                                                player.clear()\n                                                sample({ params: [20], token })\n                                                    .then(() => {\n                                                        player.updatePlayIndex(0)\n                                                        player.load()\n                                                    })\n\n                                            }}\n                                        >\n                                            Open Radio\n                                        </Button>\n                                    </Empty>\n                                )\n                        }\n                    </Content>\n                </Layout>\n            </Spin>\n        </section>\n    )\n}\n\nexport default Radio\n","import React, { useState, useEffect } from 'react'\nimport { Form, Input, Button, Checkbox, Spin, message } from 'antd'\nimport useReq from '../../services/useReq'\n\nconst layout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 16 },\n}\nconst tailLayout = {\n    wrapperCol: { offset: 2, span: 16 },\n}\n\nconst LibraryForm = () => {\n\n    const [add, { loading, res, err }] = useReq(\"POST\", \"/library/add\")\n\n    const addDir = ({ path, rec, name, description }) => {\n        const token = localStorage.getItem(\"token\")\n        add({\n            body: { path, rec, name, description },\n            token,\n        })\n    }\n\n    useEffect(() => {\n        if(res) message.success(\"Successfully added a repository\")\n        if(err) message.error(\"Failed to add this repostory.\")\n    }, [res, err])\n\n\n    return (\n        <Spin spinning={loading}>\n            <Form\n                {...layout}\n                name=\"add_dir\"\n                onFinish={addDir}\n            >\n                <Form.Item\n                    label=\"Path\"\n                    name=\"path\"\n                    rules={[{ required: true, message: 'Please input your email!' }]}\n                    help=\"Absolute path of the repository that contains music files on your SERVER.\"\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item name=\"rec\" valuePropName=\"checked\" {...tailLayout}>\n                    <Checkbox>including children repos</Checkbox>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Name\"\n                    name=\"name\"\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Description\"\n                    name=\"description\"\n                >\n                    <Input.TextArea rows={10} />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Add Library\n                    </Button>\n                </Form.Item>\n\n            </Form>\n        </Spin>\n    )\n}\n\nexport default LibraryForm\n","import React, { useState, useEffect } from 'react'\nimport { Table, Button, Spin, message, Empty, Checkbox, Modal } from 'antd'\nimport useReq from '../../services/useReq'\nimport moment from \"moment\"\n\nconst token = localStorage.getItem(\"token\")\n\nconst columns = (update, setModal) => ([\n    {\n        title: \"Path\", dataIndex: \"path\", key: \"path\",\n    },\n    {\n        title: \"Name\", dataIndex: \"name\", key: \"name\",\n    },\n    {\n        title: \"Rec\", dataIndex: \"rec\", key: \"rec\",\n        render: value => <Checkbox checked={value} disabled />\n    },\n    {\n        title: \"Count\", dataIndex: \"count\", key: \"count\",\n    },\n    {\n        title: \"Last Modified\", dataIndex: \"lastModified\", key: \"lastModified\",\n        render: value => moment(value).format(\"lll\")\n    },\n    {\n        title: \"Actions\", dataIndex: \"actions\", key: \"actions\",\n        render: (text, record, index) => (\n            <>\n                <Button\n                    type=\"primary\"\n                    onClick={() => {\n                        update({ body: { path: record.path }, token })\n                    }}\n                >\n                    Update\n                </Button>\n\n                <Button\n                    danger\n                    onClick={() => {\n                        setModal(record._id)\n                    }}\n                >\n                    Remove\n                </Button>\n            </>\n        )\n    }\n])\n\nconst LibraryTable = () => {\n    const [getlibs, { res }] = useReq('GET', \"/library/all\")\n    const [update, updateReq] = useReq(\"POST\", \"/library/add\")\n    const [remove, removeReq] = useReq(\"DELETE\", \"/library/remove\")\n    const [modal, setModal] = useState(false)\n\n    console.log(res)\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\")\n        getlibs({ token })\n    }, [])\n\n    useEffect(() => {\n        if (updateReq.res) message.success(\"Successfully updated your library.\")\n        if (removeReq.res) message.success(\"Successfully removed your library.\")\n        if (updateReq.err) message.error(\"Failed to update your library.\")\n        if (removeReq.err) message.error(\"Failed to remove your library.\")\n    }, [updateReq, removeReq])\n\n    return (\n        <>\n            <Spin spinning={updateReq?.loading || removeReq?.loading}>\n                <Table\n                    // title=\"Libraries\"\n                    columns={columns(update, setModal)}\n                    dataSource={res?.body.map(e => ({ ...e, key: e._id }))}\n                />\n            </Spin>\n            <Modal\n                title=\"confirm\"\n                visible={modal}\n                onCancel={() => {\n                    setModal(false)\n                }}\n                confirmLoading={removeReq.loading}\n                onOk={() => {\n                    remove({ body: { libraryId: modal }, token })\n                }}\n                okButtonProps={{ danger: true }}\n            >\n                <p>This operation is irreversable and is going to remove all music added with this repo.</p>\n            </Modal>\n        </>\n    )\n}\n\nexport default LibraryTable\n","import React from 'react'\nimport LibraryForm from './LibraryForm'\nimport LibraryTable from './LibraryTable'\n\nconst Library = () => {\n\n    return (\n        <div>\n            <h1>Library Repositories Management</h1>\n            <LibraryForm />\n            <LibraryTable />\n        </div>\n    )\n}\n\nexport default Library\n","import React from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Library from './Library'\n\nconst Admin = () => {\n\n    return (\n        <Router>\n            <Route exact path=\"/admin/library\">\n                <Library />\n            </Route>\n        </Router>\n    )\n}\n\nexport default Admin\n","import React, { useState, useEffect, useContext } from 'react'\nimport ReactJkMusicPlayer from \"react-jinke-music-player\"\nimport \"react-jinke-music-player/assets/index.css\"\nimport { message } from \"antd\"\nimport note1024 from \"../../assets/note1024.png\"\nimport {useHistory} from \"react-router-dom\"\n\nconst Player = ({\n    music, onTrackChange, getPlayer, onAudioPlay\n}) => {\n\n    const history = useHistory()\n\n    return (\n        <ReactJkMusicPlayer\n            glassBg\n            showMediaSession\n            audioLists={music}\n            // remember={true}\n            autoPlay={false}\n            mode={window.innerWidth < 720 ? \"mini\" : \"full\"}\n            // mode={music.length ? \"full\" : \"mini\"}\n            mode=\"full\"\n            showReload={false}\n            showLyric\n            showDownload={false}\n            spaceBar\n            showThemeSwitch={false}\n            defaultPosition={{ bottom: 20, right: 10 }}\n            onAudioPlayTrackChange={\n                onTrackChange\n                    ? onTrackChange\n                    : () => { }\n            }\n            onAudioError={(errMsg) => {\n                message.error(\"audio error\")\n                console.log(errMsg)\n            }}\n            getAudioInstance={getPlayer}\n            onAudioPlay={onAudioPlay}\n            onCoverClick={() => {\n                history.push(\"/player\")\n            }}\n            onAudioListsChange={(currentPlayId,audioLists,audioInfo) => {\n                console.log(audioLists)\n                console.log(audioInfo)\n            }}\n        />\n    )\n}\n\nexport default Player\n","import React from 'react'\nimport { Button } from 'antd'\n\nconst Welcome = () => {\n\n    return (\n        <div>\n            <p>This is a preview version of Rosalyn WebClient.</p>\n            <p>In short,</p>\n            <h1>What works :</h1>\n            <dl>\n                <dd>User system</dd>\n                <dd>Basic music player</dd>\n                <dd>Radio (random play)</dd>\n            </dl>\n            <h1>What doesn't work yet:</h1>\n            <dl>\n                <dd>Memorized playlist</dd>\n                <dd>Favor and playlist</dd>\n                <dd>Comment</dd>\n                <dd>Preference</dd>\n                <dd>Upload your own music</dd>\n                <dd>etc.</dd>\n            </dl>\n\n            <p>You may also encounter random bugs, please report them to me if you feel like doing it.</p>\n            <p>You know how to contact me.</p>\n\n            <p>There is a ghost bug when adding new songs to playlist, while url is correct, il does not load the audio file.</p>\n\n            <Button\n                type=\"primary\"\n                onClick={() => {\n                    localStorage.setItem(\"welcomed\", \"a\")\n                }}\n            >\n                Understandable\n            </Button>\n        </div>\n    )\n}\n\nexport default Welcome\n","import React, { useState, useEffect } from 'react'\nimport { Empty, Avatar } from 'antd'\nimport { PlayCircleOutlined } from '@ant-design/icons'\nimport \"./Mine.scss\"\nimport { useHistory } from \"react-router-dom\"\n\n\nconst Mine = () => {\n\n    const history = useHistory()\n\n    return (\n        <div>\n            <h1>Shortcuts</h1>\n            <div className=\"shortcuts\">\n                <div\n                    className=\"shortcut-group\"\n                    onClick={() => {\n                        history.push(\"/radio\")\n                    }}\n                >\n                    <Avatar size={100} icon={<PlayCircleOutlined />} />\n                    <p>Radio</p>\n                </div>\n            </div>\n            <h1>My favorates</h1>\n            <Empty />\n        </div>\n    )\n}\n\nexport default Mine\n","import note1024 from \"../assets/note1024.png\"\n\nconst convert = (music) => {\n    const token = localStorage.getItem(\"token\")\n    return music.map(({\n        title: name,\n        artist: singer,\n        duration, picture,\n        _id,\n        album,\n        musicSrc\n    }) => ({\n        name, singer, duration,\n        cover: picture[0] ? `data:${picture[0].format};base64,${picture[0].data}` : note1024,\n        musicSrc: `/music/download/${token}/${_id}`,\n        album,\n        _id,\n    }))\n}\n\nexport default convert\n","import React, { useState, useEffect } from 'react'\n\nimport { Layout, Menu, Drawer } from 'antd'\nimport Music from './Music'\nimport Radio from \"./Radio\"\nimport \"./Main.scss\"\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\nimport Auth from \"../middlewares/Auth\"\nimport Admin from \"./Admin\"\nimport MainContext from \"./MainContext\"\nimport Player from './Player'\nimport Welcome from './Welcome'\nimport Mine from './Mine'\nimport convert from \"../tools/convert\"\n\nconst { Header, Content, Footer } = Layout\n\nconst Main = () => {\n\n    const history = useHistory()\n    const location = useLocation()\n\n    const stored = localStorage.getItem(\"playlist\")\n\n    const [playlist, setPlaylistRaw] = useState(\n        // stored ? JSON.parse(stored) : []\n        []\n    )\n\n    const setPlaylist = music => {\n        setPlaylistRaw(convert(music))\n    }\n\n    const [audioInfo, setAudioInfo] = useState(null)\n    const [player, setPlayer] = useState(null)\n\n    const [drawer, setDrawer] = useState(false)\n\n    const onTrackChange = (currentPlayId, audioLists) => {\n        let audioInfo = audioLists.find(e => e.id === currentPlayId)\n        if (audioInfo) {\n            const { name, singer, cover, album, _id } = audioInfo\n            document.title = `${name} - ${singer}`\n            setAudioInfo({\n                title: name,\n                artist: singer,\n                picture: [cover],\n                album,\n                _id,\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (location.pathname.match(/^\\/share/) && playlist.length) {\n            const { name, singer, cover, album, _id } = playlist[0]\n            document.title = `${name} - ${singer}`\n            setAudioInfo({\n                title: name,\n                artist: singer,\n                picture: [cover],\n                album,\n                _id,\n            })\n        }\n    }, [playlist])\n\n    const onAudioPlay = (audioInfo) => {\n        if (audioInfo) {\n            const { name, singer, cover, album, _id } = audioInfo\n            document.title = `${name} - ${singer}`\n            setAudioInfo({\n                title: name,\n                artist: singer,\n                picture: [cover],\n                album,\n                _id,\n            })\n        }\n    }\n\n    return (\n        <MainContext.Provider value={{\n            playlist, setPlaylist, setPlaylistRaw,\n            audioInfo, setAudioInfo,\n            player,\n        }}>\n            <Layout className=\"main-layout\">\n                <Header className=\"header\">\n                    {/* <div className=\"logo\">Hi</div> */}\n                    <div className=\"logo\" />\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={[\n                            location.pathname === \"/radio\" || location.pathname.match(/^\\/share/)\n                                ? \"/player\"\n                                : location.pathname\n                        ]}\n                        onSelect={({ item, key }) => {\n                            history.push(key)\n                        }}\n                    >\n                        <Menu.Item key=\"/player\">Player</Menu.Item>\n                        <Menu.Item key=\"/library\">Library</Menu.Item>\n                        <Menu.Item key=\"/mylist\">My List</Menu.Item>\n                        <Menu.Item key=\"/setting\">Setting</Menu.Item>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 1vw' }}>\n                    <Auth exceptions={[\"share\"]}>\n                        <Switch>\n                            <Route path=\"/library\">\n                                <Music />\n                            </Route>\n\n                            <Route path=\"/player\">\n                                <Radio />\n                            </Route>\n\n                            <Route path=\"/radio\">\n                                <Radio radio />\n                            </Route>\n\n                            <Route path=\"/share\">\n                                <Radio share />\n                            </Route>\n\n                            <Route path=\"/mylist\">\n                                <Mine />\n                            </Route>\n\n                            <Route path=\"/setting\">\n\n                            </Route>\n\n                            <Route path=\"/admin\">\n                                <Auth rank=\"Admin\">\n                                    <Admin />\n                                </Auth>\n                            </Route>\n\n                            <Route>\n                                <Music />\n                            </Route>\n                        </Switch>\n                    </Auth>\n\n                    <Drawer\n                        title=\"Hello\"\n                        placement=\"right\"\n                        visible={drawer}\n                        onClose={() => {\n                            setDrawer(false)\n                        }}\n                    >\n                        <Welcome />\n                    </Drawer>\n                </Content>\n                <Footer>\n                    <Player\n                        music={playlist}\n                        onTrackChange={onTrackChange}\n                        getPlayer={player => {\n                            setPlayer(player)\n                        }}\n                        onAudioPlay={onAudioPlay}\n                    />\n                </Footer>\n\n            </Layout>\n        </MainContext.Provider>\n    )\n}\n\nexport default Main\n","import React from 'react'\nimport Main from './components/Main'\n\nconst App = () => {\n  return (\n    <main>\n      <Main />\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { Result, Button } from 'antd'\nimport { useHistory } from \"react-router-dom\"\n\nconst FOF = () => {\n    const history = useHistory()\n\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\" onClick={() => {\n                history.push(\"/\")\n            }}>Back Home</Button>}\n        />\n    )\n}\n\nexport default FOF\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport AppContext from './AppContext'\nimport useReq from './services/useReq'\nimport { message, Spin } from \"antd\"\nimport Auth from './middlewares/Auth'\nimport App from './App'\nimport Admin from './components/Admin'\nimport FOF from './404'\nimport Music from './components/Music'\n\nconst AppRouter = () => {\n\n    const [user, setUser] = useState(null)\n    const [run, { loading, res, err }] = useReq(\"GET\", \"/me\")\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\")\n        if (token) {\n            run({ token })\n            // .then(res => {\n            //     setUser(res.body)\n            // })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (res) {\n            message.success(\"Successfully logging you in.\")\n            setUser(res.body)\n        }\n        if (err) {\n            message.error(\"Your session has expired.\")\n        }\n    }, [res, err])\n\n    return (\n        <Spin spinning={loading}>\n            <AppContext.Provider value={\n                {\n                    user, setUser,\n                }\n            }>\n                <Router>\n                    <Switch>\n                        <Route path=\"/\">\n                            <App />\n                        </Route>\n\n                        <Route>\n                            <FOF />\n                        </Route>\n                    </Switch>\n                </Router>\n            </AppContext.Provider>\n        </Spin>\n    )\n}\n\nexport default AppRouter\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\nimport './index.css'\nimport './App.scss'\nimport * as serviceWorker from './serviceWorker'\nimport AppRouter from './AppRouter'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/note1024.ae6ba5e3.png\";"],"sourceRoot":""}